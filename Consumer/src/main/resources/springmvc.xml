<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
	xmlns:p="http://www.springframework.org/schema/p">

    <!-- 扫描Controller 创建RequestMapping对应关系 -->
    <context:annotation-config/>
    <context:component-scan base-package="com.dubbo"/>
    <mvc:annotation-driven/>

    <!-- 配置json解析 -->
    <bean id="objectMapper" class="org.codehaus.jackson.map.ObjectMapper">
        <property name="serializationInclusion" value="NON_NULL"/>
    </bean>
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="objectMapper"/>
        <property name="targetMethod" value="configure"/>
        <property name="arguments">
            <array>
                <value type="org.codehaus.jackson.map.DeserializationConfig$Feature">FAIL_ON_UNKNOWN_PROPERTIES</value>
                <value>false</value>
            </array>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!-- 这里必须设置order 才能防止annotation-driven 中生成的默认优先级过高,导致无法生效 -->
        <property name="order" value="-1"/>
        <property name="messageConverters">
            <list>
                <bean id="jacksonMessageConverter"
                      class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <!-- 解决 HttpMediaTypeNotAcceptableException: Could not find acceptable representation -->
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html;charset=UTF-8</value>
                            <value>application/x-www-form-urlencoded;charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为5MB -->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>

    <!-- spring 拦截器 -->
    <bean id="apiContextAspect" class="com.dubbo.common.aop.log.ApiLogAspect"/>
    <aop:config>
        <aop:pointcut id="si"
                      expression="(@annotation(org.springframework.web.bind.annotation.ResponseBody) and execution(public * com.dubbo.consumer..*.*(..)))"/>
        <aop:advisor pointcut-ref="si" advice-ref="apiContextAspect" order="0"/>
    </aop:config>
    <!-- 启动AspectJ支持 -->
    <aop:aspectj-autoproxy/>
</beans>